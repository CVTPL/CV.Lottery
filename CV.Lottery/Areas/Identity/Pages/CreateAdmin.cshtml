@page "/createadmin"
@model CreateAdminModel
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "admin")]
@{
    ViewData["Title"] = "Create Admin";
}
<style type="text/css">
    .active > .page-link, .page-link.active {
        background-color: #051145;
        border-color: #051145;
    }

    .page-link {
        color: #051145;
    }
</style>
<div class="row justify-content-center">
    <div class="col-md-7 col-lg-6 col-xl-5">
        <!-- Add Admin Modal -->
        <div class="modal fade" id="addAdminModal" tabindex="-1" aria-labelledby="addAdminModalLabel" aria-hidden="true">
          <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title" id="addAdminModalLabel">Register Admin</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
              </div>
              <div class="modal-body" id="admin-modal-body">
                <form id="admin-register-form" method="post" autocomplete="off">
                    <div class="mb-3">
                        <label asp-for="Input.Username" class="form-label fw-semibold">Username</label>
                        <input asp-for="Input.Username" class="form-control form-control-lg @(ViewData.ModelState["Input.Username"]?.Errors.Count > 0 ? "is-invalid" : "")" placeholder="Enter username" />
                        <span asp-validation-for="Input.Username" class="text-danger small"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="Input.Email" class="form-label fw-semibold">Email</label>
                        <input asp-for="Input.Email" class="form-control form-control-lg @(ViewData.ModelState["Input.Email"]?.Errors.Count > 0 ? "is-invalid" : "")" placeholder="Enter email address" />
                        <span asp-validation-for="Input.Email" class="text-danger small"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="Input.Password" class="form-label fw-semibold">Password</label>
                        <input asp-for="Input.Password" class="form-control form-control-lg" type="password" placeholder="Enter password" />
                        <span asp-validation-for="Input.Password" class="text-danger small"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="Input.ConfirmPassword" class="form-label fw-semibold">Confirm Password</label>
                        <input asp-for="Input.ConfirmPassword" class="form-control form-control-lg" type="password" placeholder="Confirm password" />
                        <span asp-validation-for="Input.ConfirmPassword" class="text-danger small"></span>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary px-4">Add Admin</button>
                    </div>
                </form>
              </div>
            </div>
          </div>
        </div>
    </div>
</div>

<!-- Admin/User Grid Header with Add Admin Button -->
<div class="d-flex justify-content-between align-items-center mb-2">
    <h3 class="mb-0">All Users</h3>
    <button type="button" class="btn btn-primary px-4 py-2" data-bs-toggle="modal" data-bs-target="#addAdminModal">
        <i class="bi bi-person-plus me-2"></i>Add Admin
    </button>
</div>
<div class="table-responsive rounded-4 shadow-sm border bg-white p-3">
    <table class="table table-hover align-middle mb-0 w-100" style="min-width: 480px;">
        <thead class="table-light" style="background: #e3e6f0;">
            <tr>
                <th>User Name</th>
                <th>Email</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.AllUsers != null && Model.AllUsers.Count > 0)
            {
                foreach (var user in Model.AllUsers)
                {
                    <tr>
                        <td class="text-break">@user.UserName</td>
                        <td class="text-break">@user.Email</td>
                        <td class="text-break">
                            <div class="dropdown">
                                <button class="btn btn-link p-0 m-0 align-baseline" type="button" id="dropdownMenuButton-@user.Email" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="bi bi-three-dots-vertical"></i>
                                </button>
                                <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton-@user.Email">
                                    <li>
                                        <form method="post" asp-page-handler="SendResetLink" asp-route-email="@user.Email" style="display:inline">
                                            <button type="submit" class="dropdown-item">
                                                 Reset Password
                                            </button>
                                        </form>
                                    </li>
                                </ul>
                            </div>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="3" class="text-center text-muted">No users found.</td>
                </tr>
            }
        </tbody>
    </table>
</div>
<div class="w-100 mt-3 d-flex justify-content-center">
    @if (Model.TotalPages > 1)
    {
        <nav aria-label="User pagination" class="mb-2">
            <ul class="pagination justify-content-center flex-nowrap my-1" style="min-width: 340px;">
                <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
                    <a class="page-link" href="?pageNumber=@(Model.PageNumber - 1)" tabindex="-1">Previous</a>
                </li>
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                        <a class="page-link" href="?pageNumber=@i">@i</a>
                    </li>
                }
                <li class="page-item @(Model.PageNumber == Model.TotalPages ? "disabled" : "")">
                    <a class="page-link" href="?pageNumber=@(Model.PageNumber + 1)">Next</a>
                </li>
            </ul>
        </nav>
    }
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="~/js/admin-modal-register.js"></script>
    <script>
        // On page load, if there are validation errors, show the modal
        document.addEventListener('DOMContentLoaded', function () {
            var hasValidationError =
                document.querySelector('.is-invalid') !== null;
            if (hasValidationError) {
                var addAdminModal = new bootstrap.Modal(document.getElementById('addAdminModal'));
                addAdminModal.show();
            }
        });
        // Show loader on initial page load
        document.addEventListener('DOMContentLoaded', function() {
            showLoader();
            window.addEventListener('load', function() {
                setTimeout(hideLoader, 100); // Small delay for smoothness
            });
        });
    </script>
}
