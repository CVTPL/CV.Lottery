@model ErrorViewModel
@{
    ViewData["Title"] = "Error";
    var statusCode = Context.Request.Query["statusCode"].FirstOrDefault();
}

<div class="container mt-5">
    <div class="alert alert-danger">
        <h1 class="display-4">Oops!</h1>
        <p class="lead">Sorry, an error occurred while processing your request.</p>
        @if (!string.IsNullOrEmpty(statusCode))
        {
            <p><strong>Status Code:</strong> @statusCode</p>
            if (statusCode == "404")
            {
                <p>The page you are looking for was not found.</p>
            }
            else if (statusCode == "403")
            {
                <p>You do not have permission to access this page.</p>
            }
        }
        <a href="/" class="btn btn-primary">Go to Home</a>
    </div>
</div>

@if (Model.ShowRequestId)
{
    <p>
        <strong>Request ID:</strong> <code>@Model.RequestId</code>
    </p>
}

<h3>Development Mode</h3>
<p>
    Swapping to <strong>Development</strong> environment will display more detailed information about the error that occurred.
</p>
<p>
    <strong>The Development environment shouldn't be enabled for deployed applications.</strong>
    It can result in displaying sensitive information from exceptions to end users.
    For local debugging, enable the <strong>Development</strong> environment by setting the <strong>ASPNETCORE_ENVIRONMENT</strong> environment variable to <strong>Development</strong>
    and restarting the app.
</p>
